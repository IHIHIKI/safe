{"version":3,"sources":["../../libraries/secure-utils/reflection/reflection.js","../../libraries/secure-utils/random/random.js","../../libraries/boruca-messaging/src/rpc.js","../../libraries/boruca-messaging/src/event-client.js","../../libraries/secure-utils/config/config.js","src/network-client.js"],"names":[],"mappings":"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","file":"network-client.js","sourcesContent":["export default class Reflection {\n    /** @param {Object} proto\n     *\n     * @returns {Set<string>}\n     */\n    static userFunctions(proto) {\n        return new Set(Reflection._deepFunctions(proto).filter(name => {\n            return name !== 'constructor'\n                && name !== 'fire'\n                && name[0] !== '_';\n        }));\n    }\n\n    /** @param {Object} proto\n     *\n     * @returns {string[]}\n     */\n    static _deepFunctions(proto) {\n        if (!proto || proto === Object.prototype) return [];\n\n        const ownProps = Object.getOwnPropertyNames(proto);\n\n        const ownFunctions = ownProps.filter(name => {\n            const desc = Object.getOwnPropertyDescriptor(proto, name);\n            return !!desc && typeof desc.value === 'function';\n        });\n\n        const deepFunctions = Reflection._deepFunctions(Object.getPrototypeOf(proto));\n\n        return [...ownFunctions, ...deepFunctions];\n    }\n}\n","export default class Random {\n    static getRandomId() {\n        let array = new Uint32Array(1);\n        crypto.getRandomValues(array);\n        return array[0];\n    }\n\n    static pickRandom(array = []) {\n        if (array.length < 1) return null;\n        return array[Math.floor(Math.random() * array.length)];\n    }\n}\n","import Reflection from '/libraries/secure-utils/reflection/reflection.js';\nimport Random from '/libraries/secure-utils/random/random.js';\n\nexport default class RPC {\n    /**\n     * @param {Window} targetWindow\n     * @param {string} interfaceName\n     * @param {string} [targetOrigin]\n     * @returns {Promise}\n     */\n    static async Client(targetWindow, interfaceName, targetOrigin = '*') {\n        return new Promise((resolve, reject) => {\n            let connected = false;\n\n            const interfaceListener = (message) => {\n                if (message.source !== targetWindow\n                    || message.data.status !== 'OK'\n                    || message.data.interfaceName !== interfaceName\n                    || (targetOrigin !== '*' && message.origin !== targetOrigin)) return;\n\n                self.removeEventListener('message', interfaceListener);\n\n                connected = true;\n\n                resolve( new (RPC._Client(targetWindow, targetOrigin, interfaceName, message.data.result))() );\n            };\n\n            self.addEventListener('message', interfaceListener);\n\n\n            let connectTimer;\n            const timeoutTimer = setTimeout(() => {\n                reject(new Error('Connection timeout'));\n                clearTimeout(connectTimer);\n            }, 30000);\n\n            const tryToConnect = () => {\n                if (connected) {\n                    clearTimeout(timeoutTimer);\n                    return;\n                }\n\n                try {\n                    targetWindow.postMessage({ command: 'getRpcInterface', interfaceName, id: 0 }, targetOrigin);\n                } catch (e){\n                    console.log('postMessage failed:' + e);\n                }\n                connectTimer = setTimeout(tryToConnect, 1000);\n            };\n\n            connectTimer = setTimeout(tryToConnect, 100);\n        });\n    }\n\n\n    /**\n     * @param {Window} targetWindow\n     * @param {string} interfaceName\n     * @param {array} functionNames\n     * @returns {Class}\n     * @private\n     */\n    static _Client(targetWindow, targetOrigin, interfaceName, functionNames) {\n        const Client = class {\n            constructor() {\n                this.availableMethods = functionNames;\n                // Svub: Code smell that _targetWindow and _waiting are visible outside. Todo later!\n                /** @private\n                 *  @type {Window} */\n                this._targetWindow = targetWindow;\n                this._targetOrigin = targetOrigin;\n                /** @private\n                 *  @type {Map.<number,{resolve:Function,error:Function}>} */\n                this._waiting = new Map();\n                this._receive = this._receive.bind(this);\n                self.addEventListener('message', this._receive);\n            }\n\n            close() {\n                self.removeEventListener('message', this._receive);\n            }\n\n            _receive({ source, origin, data }) {\n                // Discard all messages from unwanted sources\n                // or which are not replies\n                // or which are not from the correct interface\n                if (source !== this._targetWindow\n                    || !data.status\n                    || data.interfaceName !== interfaceName\n                    || (this._targetOrigin !== '*' && origin !== this._targetOrigin)) return;\n\n                const callback = this._waiting.get(data.id);\n\n                if (!callback) {\n                    console.log('Unknown reply', data);\n                } else {\n                    this._waiting.delete(data.id);\n\n                    if (data.status === 'OK') {\n                        callback.resolve(data.result);\n                    } else if (data.status === 'error') {\n                        const { message, stack, code } = data.result;\n                        const error = new Error(message);\n                        error.code = code;\n                        error.stack = stack;\n                        callback.error(error);\n                    }\n                }\n            }\n\n            /**\n             * @param {string} command\n             * @param {object[]} [args]\n             * @returns {Promise}\n             * @private\n             */\n            _invoke(command, args = []) {\n                return new Promise((resolve, error) => {\n                    const obj = { command, interfaceName, args, id: Random.getRandomId() };\n                    this._waiting.set(obj.id, { resolve, error });\n                    this._targetWindow.postMessage(obj, '*');\n                    // no timeout for now, as some actions require user interactions\n                    // todo maybe set timeout via parameter?\n                    //setTimeout(() => error(new Error ('request timeout')), 10000);\n                });\n            }\n        };\n\n        for (const functionName of functionNames) {\n            Client.prototype[functionName] = function (...args) {\n                return this._invoke(functionName, args);\n            };\n        }\n\n        return Client;\n    }\n\n    /**\n     * @param {Class} clazz The class whose methods will be made available via postMessage RPC\n     * @param {boolean} [useAccessControl] If set, an object containing callingWindow and callingOrigin will be passed as first arguments to each method\n     * @param {string[]} [rpcInterface] A whitelist of function names that are made available by the server\n     * @return {T extends clazz}\n     */\n    static Server(clazz, useAccessControl, rpcInterface) {\n        return new (RPC._Server(clazz, useAccessControl, rpcInterface))();\n    }\n\n    static _Server(clazz, useAccessControl, rpcInterface) {\n        const Server = class extends clazz {\n            constructor() {\n                super();\n                this._name = Server.prototype.__proto__.constructor.name;\n                self.addEventListener('message', this._receive.bind(this));\n            }\n\n            close() {\n                self.removeEventListener('message', this._receive.bind(this));\n            }\n\n            _replyTo(message, status, result) {\n                message.source.postMessage({ status, result, interfaceName: this._name, id: message.data.id }, message.origin);\n            }\n\n            _receive(message) {\n                try {\n                    if (message.data.interfaceName !== this._name) return;\n                    if (!this._rpcInterface.includes(message.data.command)) throw new Error('Unknown command');\n\n                    let args = message.data.args || [];\n\n                    if (useAccessControl && message.data.command !== 'getRpcInterface') {\n                        // Inject calling origin to function args\n                        args = [{ callingWindow: message.source, callingOrigin: message.origin }, ...args];\n                    }\n\n                    /* deactivate this since there is no security issue and by wrapping in acl length info gets lost\n                    // Test if request calls an existing method with the right number of arguments\n                    const calledMethod = this[message.data.command];\n                    if (!calledMethod) {\n                        throw `Non-existing method ${message.data.command} called: ${message}`;\n                    }\n\n                    if (calledMethod.length < args.length) {\n                        throw `Too many arguments passed: ${message}`;\n                    }*/\n\n                    const result = this._invoke(message.data.command, args);\n\n                    if (result instanceof Promise) {\n                        result\n                            .then((finalResult) => this._replyTo(message, 'OK', finalResult))\n                            .catch(e => this._replyTo(message, 'error',\n                                e.message ? { message: e.message, stack: e.stack, code: e.code } : { message: e } ));\n                    } else {\n                        this._replyTo(message, 'OK', result);\n                    }\n                } catch (e) {\n                    this._replyTo(message, 'error',\n                        e.message ? { message: e.message, stack: e.stack, code: e.code } : { message: e } );\n                }\n            }\n\n            _invoke(command, args) {\n                return this[command].apply(this, args);\n            }\n        };\n\n        if (rpcInterface !== undefined) {\n            Server.prototype._rpcInterface = rpcInterface;\n        } else {\n            console.warn('No function whitelist as third parameter to Server() found, public functions are automatically determined!');\n\n            // Collect function names of the Server's interface\n            Server.prototype._rpcInterface = [];\n            for (const functionName of Reflection.userFunctions(clazz.prototype)) {\n                Server.prototype._rpcInterface.push(functionName);\n            }\n        }\n\n        Server.prototype._rpcInterface.push('getRpcInterface');\n\n        // Add function to retrieve the interface\n        Server.prototype['getRpcInterface'] = function() {\n            if(this.onConnected) this.onConnected.call(this);\n            return Server.prototype._rpcInterface;\n        };\n\n        return Server;\n    }\n}\n\n// TODO: Handle unload/load events (how?)\n","import RPC from './rpc.js';\n\nexport default class EventClient {\n    /**\n     * @param {Window} targetWindow\n     * @param {string} [targetOrigin]\n     * @returns {object}\n     */\n    static async create(targetWindow, targetOrigin = '*') {\n        const client = new EventClient(targetWindow, targetOrigin);\n        client._rpcClient = await RPC.Client(targetWindow, 'EventRPCServer', targetOrigin);\n        return client;\n    }\n\n    constructor(targetWindow, targetOrigin) {\n        this._listeners = new Map();\n        this._targetWindow = targetWindow;\n        this._targetOrigin = targetOrigin;\n        self.addEventListener('message', this._receive.bind(this));\n    }\n\n    _receive({origin, data: {event, value}}) {\n        // Discard all messages from unwanted origins or which are not events\n        if ((this._targetOrigin !== '*' && origin !== this._targetOrigin) || !event) return;\n\n        if (!this._listeners.get(event)) return;\n\n        for (const listener of this._listeners.get(event)) {\n            listener(value);\n        }\n    }\n\n    on(event, callback) {\n        if (!this._listeners.get(event)) {\n            this._listeners.set(event, new Set());\n            this._rpcClient.on(event);\n        }\n\n        this._listeners.get(event).add(callback);\n    }\n\n    off(event, callback) {\n        if (!this._listeners.has(event)) return;\n\n        this._listeners.get(event).delete(callback);\n\n        if (this._listeners.get(event).size === 0) {\n            this._listeners.delete(event);\n            this._rpcClient.off(event);\n        }\n    }\n}\n","export default class Config {\n\n    /* Public methods */\n\n    static get tld() {\n        const tld = window.location.origin.split('.');\n        return [tld[tld.length - 2], tld[tld.length - 1]].join('.');\n    }\n\n    // sure we want to allow this?\n    static set network(network) {\n        Config._network = network;\n    }\n\n    static get network() {\n        if (Config._network) return Config._network;\n\n        if (Config.offlinePackaged) return 'main';\n\n        switch (Config.tld) {\n            case 'nimiq.com': return 'main';\n            case 'nimiq-testnet.com': return 'test';\n            default: return 'test'; // Set this to 'test', 'bounty', or 'dev' for localhost development\n        }\n    }\n\n    static get cdn() {\n        if (Config.offlinePackaged) return Config.src('keyguard') + '/nimiq.js';\n\n        switch (Config.tld) {\n            case 'nimiq.com': return 'https://cdn.nimiq.com/nimiq.js';\n            default: return 'https://cdn.nimiq-testnet.com/nimiq.js'; // TODO make https://cdn.nimiq.com/nimiq.js the default\n        }\n    }\n\n    static set devMode(devMode) {\n        Config._devMode = devMode;\n    }\n\n    static get devMode() {\n        if (Config._devMode) return Config._devMode;\n\n        switch (Config.tld) {\n            case 'nimiq.com': return false;\n            case 'nimiq-testnet.com': return false;\n            default: return true;\n        }\n    }\n\n    static get productionMode() {\n        if (Config.tld === 'nimiq.com') return true;\n        return false;\n    }\n\n    static origin(subdomain) {\n        return Config._origin(subdomain);\n    }\n\n    static src(subdomain) {\n        return Config._origin(subdomain, true);\n    }\n\n    static get online() {\n        return !Config.offline;\n    }\n\n    /* Private methods */\n\n    static _origin(subdomain, withPath) {\n        if (location.origin.includes('localhost')) {\n            return Config._localhost(subdomain, withPath);\n        }\n\n        if (Config.devMode) {\n            return Config._localhost(subdomain, withPath, true);\n        }\n\n        return `https://${subdomain}.${Config.tld}${(withPath && '/') || ''}`;\n    }\n\n    static _localhost(subdomain, withPath, ipMode) {\n        let path = '';\n\n        if (withPath) {\n            if (Config.offlinePackaged) path = '/' + subdomain + '/';\n            else {\n                switch (subdomain) {\n                    case 'keyguard': path = '/libraries/keyguard/'; break;\n                    case 'network': path = '/libraries/network/'; break;\n                    case 'safe': path = '/apps/safe/'; break;\n                    case 'promo': path = '/apps/promo/'; break;\n                    case 'shop': path = '/'; break;\n                }\n\n                if (location.pathname.includes('/dist')) {\n                    path += `deployment-${subdomain}/dist/`;\n                }\n                else if (['keyguard', 'network', 'safe'].includes(subdomain)) {\n                    path += 'src/';\n                }\n            }\n        }\n\n        subdomain = Config.offlinePackaged ? '' : subdomain + '.';\n\n        const origin = ipMode ? location.hostname : `${subdomain}localhost`;\n\n        return `${location.protocol}//${origin}${location.port ? `:${location.port}` : ''}${path}`;\n    }\n}\n\n// Signal if the app should be started in offline mode\nConfig.offline = navigator.onLine !== undefined && !navigator.onLine;\n\n// When packaged as distributed offline app, subdomains are folder names instead\nConfig.offlinePackaged = false;\n","import { RPC, EventClient } from '/libraries/boruca-messaging/src/boruca.js';\nimport Config from '/libraries/secure-utils/config/config.js';\n\nclass NetworkClient {\n    static getInstance() {\n        this._instance = this._instance || new NetworkClient();\n        return this._instance;\n    }\n\n    constructor() {\n        this._isLaunched = false;\n\n        this.rpcClient = new Promise(res => {\n            this.rpcClientResolve = res;\n        });\n\n        this.eventClient = new Promise(res => {\n            this.eventClientResolve = res;\n        });\n    }\n\n    async launch() {\n        if (this._isLaunched) return;\n        this._isLaunched = true;\n        this.$iframe = await this._createIframe(Config.src('network'));\n        this.rpcClientResolve(RPC.Client(this.$iframe.contentWindow, 'NanoNetworkApi', Config.origin('network')));\n        this.eventClientResolve(EventClient.create(this.$iframe.contentWindow));\n    }\n\n    /**\n     * @return {Promise}\n     */\n    _createIframe(src) {\n        const $iframe = document.createElement('iframe');\n        const promise = new Promise(resolve => $iframe.addEventListener('load', () => resolve($iframe)));\n        $iframe.src = src;\n        $iframe.name = 'network';\n        document.body.appendChild($iframe);\n        return promise;\n    }\n}\n\nexport default NetworkClient.getInstance();\n"]}